{"ast":null,"code":"var _jsxFileName = \"/Users/Fernando_Andres_Poblete/Desktop/Programacion/Blockchain/bnbBootcamp/Tasks/hw9/soliditybootcamp/ethers-js/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from './abi/abi.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [savedText, setSavedText] = useState('');\n  const [connected, setConnected] = useState(false);\n  const {\n    ethereum\n  } = window;\n  let contract = null;\n  const getContractInfo = async contract => {\n    const name = await contract.name();\n    const symbol = await contract.symbol();\n    const decimals = await contract.decimals();\n    const totalSupply = await contract.totalSupply();\n    console.log(name, symbol, decimals, totalSupply.toString());\n  };\n  if (ethereum) {\n    const address = '0x67efb6498193CaAaA13baD48c9e2DaC69dfd9b35';\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n    getContractInfo(contract);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && !connected) {\n          ethereum.request({\n            method: 'eth_requestAccounts'\n          }).then(accounts => {\n            setConnected(true);\n          });\n        }\n      },\n      children: !connected ? 'Connect wallet' : 'Connected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (contract && connected) {\n          contract.changeText(text).then(() => {\n            setText('');\n          });\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter text\",\n        onChange: e => setText(e.currentTarget.value),\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Change text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.text().then(text => {\n            setSavedText(text);\n          });\n        }\n      },\n      children: \"Get text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: savedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wuF/mXZJCzHt4SAB6h9P7J5unxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","abi","jsxDEV","_jsxDEV","App","_s","text","setText","savedText","setSavedText","connected","setConnected","ethereum","window","contract","getContractInfo","name","symbol","decimals","totalSupply","console","log","toString","address","provider","providers","Web3Provider","signer","getSigner","Contract","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","request","method","then","accounts","onSubmit","e","preventDefault","changeText","type","placeholder","onChange","currentTarget","value","_c","$RefreshReg$"],"sources":["/Users/Fernando_Andres_Poblete/Desktop/Programacion/Blockchain/bnbBootcamp/Tasks/hw9/soliditybootcamp/ethers-js/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from './abi/abi.json';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [savedText, setSavedText] = useState('');\n  const [connected, setConnected] = useState(false);\n  const { ethereum } = window;\n  let contract = null;\n\n  const getContractInfo = async contract => {\n    const name = await contract.name();\n    const symbol = await contract.symbol();\n    const decimals = await contract.decimals();\n    const totalSupply = await contract.totalSupply();\n\n    console.log(name, symbol, decimals, totalSupply.toString());\n  };\n\n  if (ethereum) {\n    const address = '0x67efb6498193CaAaA13baD48c9e2DaC69dfd9b35';\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    contract = new ethers.Contract(address, abi, signer);\n    getContractInfo(contract);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Text Contract</h1>\n\n      <button\n        onClick={() => {\n          if (contract && !connected) {\n            ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {\n              setConnected(true);\n            });\n          }\n        }}>\n        {!connected ? 'Connect wallet' : 'Connected'}\n      </button>\n\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          if (contract && connected) {\n            contract.changeText(text).then(() => {\n              setText('');\n            });\n          }\n        }}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter text\"\n          onChange={e => setText(e.currentTarget.value)}\n          value={text}\n        />\n        <input\n          type=\"submit\"\n          value=\"Change text\"\n        />\n      </form>\n\n      <button\n        onClick={() => {\n          if (contract && connected) {\n            contract.text().then(text => {\n              setSavedText(text);\n            });\n          }\n        }}>\n        Get text\n      </button>\n\n      <h3>{savedText}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}