{"ast":null,"code":"var _jsxFileName = \"/Users/Fernando_Andres_Poblete/Desktop/Programacion/Blockchain/bnbBootcamp/Tasks/hw9/soliditybootcamp/ethers-js/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from './abi/abi.json';\nimport { getContractInfo } from './helpers/getContractInfo';\nimport { Form } from './components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [savedText, setSavedText] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [contractInfo, setContractInfo] = useState({});\n  const {\n    ethereum\n  } = window;\n\n  // UseEffect on component mount\n  useEffect(() => {\n    if (ethereum) {\n      const address = '0x67efb6498193CaAaA13baD48c9e2DaC69dfd9b35';\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(address, abi, signer));\n\n      // Call getContractInfo to get the contract information using async await\n      getContractInfo(contract, setContractInfo);\n    }\n  }, []);\n  const onConnectButtonClick = () => {\n    console.log(contract);\n    if (contract && !connected) {\n      ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        setConnected(true);\n      });\n    }\n  };\n  console.log(contractInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: contractInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onConnectButtonClick,\n      children: connected ? 'Connected' : 'Connect wallet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      contract: contract,\n      connected: connected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (contract && connected) {\n          contract.text().then(text => {\n            setSavedText(text);\n          });\n        }\n      },\n      children: \"Get text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: savedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HX1msqyFtjN2ygErvCqXN8mnTOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","abi","getContractInfo","Form","jsxDEV","_jsxDEV","App","_s","savedText","setSavedText","connected","setConnected","contract","setContract","contractInfo","setContractInfo","ethereum","window","address","provider","providers","Web3Provider","signer","getSigner","Contract","onConnectButtonClick","console","log","request","method","then","accounts","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/Users/Fernando_Andres_Poblete/Desktop/Programacion/Blockchain/bnbBootcamp/Tasks/hw9/soliditybootcamp/ethers-js/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport abi from './abi/abi.json';\nimport { getContractInfo } from './helpers/getContractInfo';\nimport { Form } from './components/Form';\n\nfunction App() {\n  const [savedText, setSavedText] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [contract, setContract] = useState(null);\n  const [contractInfo, setContractInfo] = useState({});\n  const { ethereum } = window;\n\n  // UseEffect on component mount\n  useEffect(() => {\n    if (ethereum) {\n      const address = '0x67efb6498193CaAaA13baD48c9e2DaC69dfd9b35';\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      setContract(new ethers.Contract(address, abi, signer));\n\n      // Call getContractInfo to get the contract information using async await\n      getContractInfo(contract, setContractInfo);\n    }\n  }, []);\n\n  const onConnectButtonClick = () => {\n    console.log(contract);\n    if (contract && !connected) {\n      ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {\n        setConnected(true);\n      });\n    }\n  };\n\n  console.log(contractInfo);\n\n  return (\n    <div className=\"App\">\n      <h1>{contractInfo.name}</h1>\n\n      {/* Connect Button */}\n      <button onClick={onConnectButtonClick}>{connected ? 'Connected' : 'Connect wallet'}</button>\n\n      {/* Form */}\n\n      <Form\n        contract={contract}\n        connected={connected}\n      />\n\n      <button\n        onClick={() => {\n          if (contract && connected) {\n            contract.text().then(text => {\n              setSavedText(text);\n            });\n          }\n        }}>\n        Get text\n      </button>\n\n      <h3>{savedText}</h3>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}